/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BuzzerUI.java
 *
 * Created on Nov 22, 2010, 11:15:05 AM
 */

package jeopardybuzzer;

import  javax.sound.sampled.*; //Playing sound
import  java.io.File;
import  java.awt.Color;
import  javax.swing.Timer;
import  java.awt.event.ActionListener;
import  java.awt.event.ActionEvent;

/**
 *
 * @author mabitaj
 */
public class BuzzerUI extends javax.swing.JFrame implements ActionListener {

        //Settings
    private String filename = "TimesUp.wav";
            //"H:/My Documents/NetBeansProjects/JeopardyBuzzer/src/jeopardybuzzer/TimesUp.wav";
    private static final int totalTime = 10;
    private int t; //Timer countdown

    private Timer timer;
    private AudioInputStream timesUp;
    private Clip timesUpClip;

    /** Creates new form BuzzerUI */
    public BuzzerUI() {
        t = totalTime;
        timer = new Timer(1000, this);
        createSound(filename);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playerText = new javax.swing.JTextField();
        timerText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        playerText.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        playerText.setEditable(false);
        playerText.setFont(new java.awt.Font("Arial", 1, 70)); // NOI18N
        playerText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        playerText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        timerText.setEditable(false);
        timerText.setFont(new java.awt.Font("Arial", 1, 375)); // NOI18N
        timerText.setForeground(java.awt.Color.green);
        timerText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        timerText.setBorder(null);
        timerText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timerTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                    .addComponent(timerText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(playerText, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(timerText, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void timerTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timerTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timerTextActionPerformed

    /**
    * @param args the command line arguments
    */
        private void createSound(String filename)
    {
	try{
                timesUp= AudioSystem.getAudioInputStream(new File(filename));
		AudioFormat format = timesUp.getFormat();
		DataLine.Info info = new DataLine.Info(Clip.class, timesUp.getFormat());
		timesUpClip = (Clip) AudioSystem.getLine(info);
		timesUpClip.open(timesUp);
	}
        catch (Exception e)
	{
	 	System.err.println(e.toString());
	}
    }

    //Set the first team to buzz in
    public synchronized void setPlayer(String player)
    {
        try {
            int i = Integer.parseInt(player);
            timer.start();
            playerText.setForeground(Color.BLUE);
            playerText.setText("Team " + player);
        }
        catch(NumberFormatException nFE) {
            if(player.equals("R"))
            {
                timer.stop();
                buzzerReset();
                playerText.setForeground(Color.black);
                playerText.setText("Ready!");
            }
        }
    }

    //Event performed for every tick of timer
    public synchronized void actionPerformed(ActionEvent e)
    {
        --t;
        this.timerText.setText(Integer.toString(t));

        if( t == 3)
            timerText.setForeground(Color.red);
        else if(t == 0)
        {
            timer.stop();
            timesUpClip.start();
        }

    }
    /**
    * @param args the command line arguments
    */

    //Reset buzzer gui to default values
    public synchronized void buzzerReset()
    {
        t = totalTime;
        timer = new Timer(1000, this);
        timesUpClip.stop();
        timesUpClip.setFramePosition(0);
        timerText.setForeground(Color.green);
        timerText.setText(Integer.toString(t));
    }

//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new BuzzerUI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField playerText;
    private javax.swing.JTextField timerText;
    // End of variables declaration//GEN-END:variables

}
